{"version":3,"sources":["actions/pokemons.js","helpers/index.js","components/MiniCard/index.js","components/PokemonStats/index.js","components/PokemonsContainer/index.js","components/App/App.js","components/App/index.js","reducers/pokemons.js","reducers/pokemonInfo.js","reducers/index.js","index.js","middleware/api.js"],"names":["addExtendedData","data","type","capitalize","string","newString","split","join","charAt","toUpperCase","slice","connect","setPokemonInfo","filterPokemons","filter","handleFilterPokemons","e","preventDefault","stopPropagation","currentTarget","dataset","className","onClick","src","sprites","front_default","alt","name","types","map","index","key","data-type","PokemonStats","info","id","str","hashId","Table","bordered","stats","stat","base_stat","window","onscroll","document","querySelector","pageYOffset","classList","add","remove","pokemonsReducer","pokemonInfoReducer","pokemons","next","infoData","extendedData","filteredData","getChunk","url","currentAPI","onSuccess","setVisibleInfo","visible","getPokemon","resetFilter","useState","loading","setLoading","useEffect","length","pokemonsPromises","pokemon","Promise","all","then","values","App","initialState","filterByType","findIndex","rootReducer","combineReducers","state","action","concat","results","store","createStore","compose","applyMiddleware","dispatch","a","axios","method","axiosRes","res","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.93bdaf18.chunk.js","sourcesContent":["const currentAPI = 'https://pokeapi.co/api/v2';\r\n\r\nexport const getChunk = (url = currentAPI  + '/pokemon/?limit=12') => {\r\n    function onSuccess(data){\r\n        return {\r\n            type: 'SET_CHUNK',\r\n            data\r\n        }\r\n    }\r\n\r\n    return{\r\n        type: 'API',\r\n        url,\r\n        onSuccess\r\n    }\r\n}\r\n\r\nexport const getPokemon = (url) => {\r\n\r\n    return {\r\n        type: 'API',\r\n        url\r\n    }\r\n}\r\n\r\nexport const resetFilter = () => ({\r\n    type:'RESET_FILTER'\r\n})\r\n\r\nexport const addExtendedData = (data) => ({\r\n    type:'ADD_EXTENDED',\r\n    data\r\n}) \r\n\r\nexport const setPokemonInfo = (data) => ({\r\n    type: 'SET_INFO',\r\n    data\r\n})\r\n\r\n\r\nexport const setVisibleInfo = (visible) => ({\r\n    type: 'SET_VISIBLE_INFO',\r\n    visible\r\n})\r\n\r\nexport const filterPokemons = (type) => ({\r\n    type: 'SET_FILTER',\r\n    filter: type\r\n})","export const capitalize = (string) => {\r\n    let newString = string.split('-').join(' ');\r\n    return newString.charAt(0).toUpperCase() + newString.slice(1)\r\n}\r\n\r\nexport const hashId = (id) => {\r\n    let str = '#';\r\n\r\n    if(id < 10){\r\n        str += '00' + id;\r\n    }else if(id >= 10 && id < 100){\r\n        str += '0' + id;\r\n    }else{\r\n        str += id;\r\n    }\r\n    return str;\r\n}","import React from 'react'\r\n\r\nimport { setPokemonInfo, filterPokemons, addExtendedData } from '../../actions/pokemons'\r\nimport {capitalize, abilityColor} from '../../helpers'\r\nimport { connect } from 'react-redux';\r\n\r\nfunction MiniCard({data, setPokemonInfo, filterPokemons}) {\r\n    const handleOnClick = (e) => {\r\n        e.preventDefault()\r\n        setPokemonInfo(data);\r\n    }\r\n\r\n    const handleFilterPokemons = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        filterPokemons(e.currentTarget.dataset.type);\r\n    }\r\n\r\n    return (\r\n        <div className=\"pokemon-card\" onClick={handleOnClick}>\r\n            <div className=\"pokemon-card__image\">\r\n                <img src={data.sprites.front_default} alt=\"pokemon\"/>\r\n            </div>\r\n            <div className=\"pokemon-card__info\">\r\n                <div className=\"pokemon-card__name\">\r\n                    {\r\n                        capitalize(data.name)\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"pokemon-card__abilities\">\r\n                {data.types.map((type, index) => (\r\n                    <div className={`pokemon-card__ability ${type.type.name}`} key={index} onClick={handleFilterPokemons} data-type={type.type.name}>\r\n                        {capitalize(type.type.name)}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null,  { setPokemonInfo, filterPokemons, addExtendedData })(MiniCard)\r\n","import React from 'react'\r\nimport Table from 'react-bootstrap/Table'\r\n\r\nimport {capitalize, hashId} from '../../helpers'\r\n\r\nexport default function PokemonStats({info}) {\r\n    return (\r\n        <div className=\"pokemon-card pokemon-stats\">\r\n            <div className=\"pokemon-card__image\">\r\n                <img src={info.data.sprites.front_default} alt=\"pokemon\"/>\r\n            </div>\r\n            <div className=\"pokemon-card__info\">\r\n                <div className=\"pokemon-card__name\">\r\n                    {capitalize(info.data.name)} {hashId(info.data.id)}\r\n                </div>\r\n            </div>\r\n            <Table bordered>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Type</td>\r\n                        <td>{capitalize(info.data.types[0].type.name)}</td>\r\n                    </tr>\r\n                    {info.data.stats.map((stat, index) => (\r\n                        <tr key={index}>\r\n                            <td>{capitalize(stat.stat.name)}</td>\r\n                            <td>{stat.base_stat}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect} from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport {getChunk , getPokemon, addExtendedData, resetFilter} from '../../actions/pokemons'\r\nimport {setVisibleInfo} from '../../actions/pokemons'\r\nimport MiniCard from '../MiniCard'\r\nimport PokemonStats from '../PokemonStats'\r\n\r\nfunction PokemonsContainer({\r\n    pokemons,\r\n    extendedData,\r\n    addExtendedData,\r\n    filteredData,\r\n    next,\r\n    infoData,\r\n    getPokemon,\r\n    getChunk,\r\n    setVisibleInfo,\r\n    resetFilter\r\n}) {\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        getChunk();\r\n    }, [getChunk])\r\n\r\n    useEffect(() => {\r\n        if(pokemons.length){\r\n\r\n            let pokemonsPromises = pokemons.map((pokemon) => {\r\n                    return getPokemon(pokemon.url);\r\n            });\r\n\r\n            Promise.all(pokemonsPromises)\r\n            .then(values => {\r\n                setLoading(false);\r\n                addExtendedData(values)\r\n            })\r\n\r\n        }\r\n    }, [pokemons, getPokemon, addExtendedData])\r\n\r\n    const handleLoadMore = () => {\r\n        getChunk(next);\r\n    }\r\n\r\n    const handleCloseInfo = () => {\r\n        setVisibleInfo(false);\r\n    }\r\n\r\n    const handleResetFilter = () => {\r\n        resetFilter();\r\n    }\r\n\r\n    return (<>\r\n        <div className=\"reset-filters\" onClick={handleResetFilter}>Reset filters</div>\r\n        <div className=\"main-container\">\r\n            <div className=\"main-container__pokemons\">\r\n                    {loading\r\n                    ? null\r\n                    : filteredData.length\r\n                    ?\r\n                    filteredData.map((pokemon, index) => <div className=\"main-container__pokemons-item\" key={index}><MiniCard data={pokemon}/></div>)\r\n                    :\r\n                    extendedData.map((pokemon, index) => <div className=\"main-container__pokemons-item\" key={index}><MiniCard data={pokemon}/></div>)\r\n                    }\r\n                <div className=\"main-container__load-more\" onClick={handleLoadMore}>Load more</div>\r\n            </div>\r\n            {\r\n                infoData.visible\r\n                ? (<div className=\"main-container__pokemon-info-container\">\r\n                        <div className=\"main-container__pokemon-info-times\" onClick={handleCloseInfo}></div>\r\n                        <div className={`main-container__pokemon-info ${window.pageYOffset >= 100 ? 'offset-top' : ''}`}>\r\n                            <PokemonStats info={infoData}/>\r\n                        </div>\r\n                    </div>)\r\n                : null\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nwindow.onscroll = () => {\r\n    let info = document.querySelector('.main-container__pokemon-info');\r\n    if(!info) return;\r\n    if(window.pageYOffset >= 100){\r\n        info.classList.add('offset-top');\r\n    }else{\r\n        info.classList.remove('offset-top');\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ pokemonsReducer, pokemonInfoReducer }) => {\r\n    return {\r\n        pokemons: pokemonsReducer.data,\r\n        next: pokemonsReducer.next,\r\n        infoData: pokemonInfoReducer,\r\n        extendedData: pokemonsReducer.extendedData,\r\n        filteredData: pokemonsReducer.filteredData\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    getChunk,\r\n    setVisibleInfo,\r\n    getPokemon,\r\n    addExtendedData,\r\n    resetFilter\r\n})(PokemonsContainer)\r\n","import React from 'react'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.scss'\n\nimport PokemonsContainer from '../PokemonsContainer'\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <h1>Pokedex</h1>\n        <PokemonsContainer/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import App from './App'\r\n\r\nexport default App","const initialState = {\r\n    data: [],\r\n    extendedData: [],\r\n    filteredData: [],\r\n    next: null,\r\n    filter: null,\r\n}\r\n\r\nconst filterByType = (pokemons, filter) => {\r\n    let filtered = pokemons.filter(pokemon => {\r\n        let foundTypeIndex = pokemon.types.findIndex(type => type.type.name === filter)\r\n        if(foundTypeIndex !== -1){\r\n            return true;\r\n        }\r\n        return false;\r\n    })\r\n\r\n    return filtered\r\n}\r\n\r\nexport const pokemonsReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case 'SET_CHUNK':\r\n            return {\r\n                ...state,\r\n                data: state.data.concat(action.data.results),\r\n                next: action.data.next \r\n            }\r\n        case 'SET_FILTER':\r\n            return {\r\n                ...state,\r\n                filter: action.filter,\r\n                filteredData: filterByType(state.extendedData, action.filter)\r\n            }\r\n        case 'RESET_FILTER':\r\n            return {\r\n                ...state,\r\n                filteredData: []\r\n            }\r\n        case 'ADD_EXTENDED':\r\n            return {\r\n                ...state,\r\n                extendedData: action.data\r\n            }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    data : null,\r\n    visible : false\r\n}\r\n\r\nexport const pokemonInfoReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case 'SET_INFO':\r\n            return  {\r\n                data: action.data,\r\n                visible: !state.visible || !state.data || state.data.id !== action.data.id\r\n            }\r\n        case 'SET_VISIBLE_INFO':\r\n            return{\r\n                ...state,\r\n                visible: action.visible\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport { pokemonsReducer } from './pokemons'\r\nimport { pokemonInfoReducer } from './pokemonInfo'\r\n\r\nexport const rootReducer = combineReducers({\r\n    pokemonsReducer,\r\n    pokemonInfoReducer\r\n})\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { Provider } from 'react-redux'\nimport { compose, createStore, applyMiddleware  } from 'redux'\nimport { rootReducer } from './reducers'\nimport { apiMiddleware } from './middleware'\nimport thunk from 'redux-thunk'\n\nconst store = createStore(\n    rootReducer,\n    compose(applyMiddleware(apiMiddleware, thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n","import axios from 'axios'\r\n\r\nexport const apiMiddleware = ({dispatch}) => next => async action => {\r\n    if(action.type !== 'API'){\r\n        next(action);\r\n        return;\r\n    }\r\n\r\n    const axiosRes = await axios({\r\n        url: action.url,\r\n        method: 'GET'\r\n    })\r\n\r\n    const res = axiosRes.data;\r\n\r\n    if (res && action.onSuccess) {\r\n        dispatch(action.onSuccess(res));\r\n    }\r\n    \r\n    return res;\r\n}"],"sourceRoot":""}